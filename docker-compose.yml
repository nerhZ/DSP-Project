services:
  # web:
  #   container_name: web
  #   build:
  #     context: .
  #     dockerfile: bun_Dockerfile
  #   ports:
  #     - '3000:3000'
  #   depends_on:
  #     - db
  #   environment:
  #     - HOST=0.0.0.0
  #   develop:
  #     watch:
  #       - action: rebuild
  #         path: .
  #   volumes:
  #     - /mnt/AppStorage:/mnt/AppStorage
  db:
    container_name: postgres
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: local
    volumes:
      - postgres_data:/var/lib/postgresql/data

  db_admin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    # Stops log spamming from pgadmin4
    attach: false
    depends_on:
      - db

  # nginx:
  #   container_name: nginx
  #   image: nginx
  #   ports:
  #     - '443:443'
  #     - '80:80'
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro # Ensure this is a file mount
  #     - /dev/SSL-storage:/etc/nginx/ssl
  #   depends_on:
  #     - web

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local
  web_data:
    driver: local
